// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using coreData.Data;

namespace coreData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231016191139_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DutyUnits", b =>
                {
                    b.Property<int>("dutyID")
                        .HasColumnType("int");

                    b.Property<int>("unitsID")
                        .HasColumnType("int");

                    b.HasKey("dutyID", "unitsID");

                    b.HasIndex("unitsID");

                    b.ToTable("DutyUnits");
                });

            modelBuilder.Entity("coreModel.Model.Duty", b =>
                {
                    b.Property<int>("dutyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dutyDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dutyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dutyPoint")
                        .HasColumnType("int");

                    b.HasKey("dutyID");

                    b.ToTable("dutys");
                });

            modelBuilder.Entity("coreModel.Model.Employee", b =>
                {
                    b.Property<int>("employeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("dutyID")
                        .HasColumnType("int");

                    b.Property<decimal>("employeeBounty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("employeeDOS")
                        .HasColumnType("datetime2");

                    b.Property<string>("employeeGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeNameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("employeeShift")
                        .HasColumnType("bit");

                    b.Property<decimal>("employeeWage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("titleID")
                        .HasColumnType("int");

                    b.HasKey("employeeID");

                    b.HasIndex("dutyID");

                    b.HasIndex("titleID");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("coreModel.Model.Kids", b =>
                {
                    b.Property<int>("kidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("employeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("kidBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("kidGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kidNameSurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kidID");

                    b.HasIndex("employeeID");

                    b.ToTable("kids");
                });

            modelBuilder.Entity("corekatmanproje.Models.Project", b =>
                {
                    b.Property<int>("projectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("dutyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("projectDOE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("projectDOS")
                        .HasColumnType("datetime2");

                    b.Property<string>("projectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("projectID");

                    b.HasIndex("dutyID");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("corekatmanproje.Models.Title", b =>
                {
                    b.Property<int>("titleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("titleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("titleID");

                    b.ToTable("titles");
                });

            modelBuilder.Entity("corekatmanproje.Models.Units", b =>
                {
                    b.Property<int>("unitsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("unitsNOE")
                        .HasColumnType("int");

                    b.Property<string>("unitsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("unitsID");

                    b.ToTable("units");
                });

            modelBuilder.Entity("DutyUnits", b =>
                {
                    b.HasOne("coreModel.Model.Duty", null)
                        .WithMany()
                        .HasForeignKey("dutyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("corekatmanproje.Models.Units", null)
                        .WithMany()
                        .HasForeignKey("unitsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("coreModel.Model.Employee", b =>
                {
                    b.HasOne("coreModel.Model.Duty", "duty")
                        .WithMany()
                        .HasForeignKey("dutyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("corekatmanproje.Models.Title", "title")
                        .WithMany()
                        .HasForeignKey("titleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("duty");

                    b.Navigation("title");
                });

            modelBuilder.Entity("coreModel.Model.Kids", b =>
                {
                    b.HasOne("coreModel.Model.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("corekatmanproje.Models.Project", b =>
                {
                    b.HasOne("coreModel.Model.Duty", "duty")
                        .WithMany()
                        .HasForeignKey("dutyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("duty");
                });
#pragma warning restore 612, 618
        }
    }
}
